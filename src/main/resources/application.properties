spring.application.name=pk
server.port=${port:8080}

# Security Properties
service.user=admin
# noop password encoder, see https://spring.io/blog/2017/11/01/spring-security-5-0-0-rc1-released
service.password={noop}djUsh727sjhUgas6

#Group names must match the AD-users memberOf-attribute. This includes the OU-path to the group.
#Multiple entries must be separated with ;
ldap.access.role=(memberOf=CN=csSchmalzFI,OU=Contentserv-Gruppen,OU=Gruppen,DC=schmalzgroup,DC=local);(memberOf=CN=EDV-Verwaltung,OU=Teams,OU=Gruppen,DC=schmalz,DC=local);(memberOf=CN=CN-Marketing,OU=Group,OU=CN,DC=cn,DC=schmalzgroup,DC=local)

#User -> least rights, Poweruser -> additional rights, Admin -> maximum rights
#AD-Groups for higher-rights-user must also be added to the lower-rights-roles. Example: If a AD-group 'administrators' is to be set as an admin-role, you also have to add it to user-role and poweruser-role
role.user=EDV-Verwaltung
role.poweruser=EDV-Verwaltung
role.admin=EDV-Verwaltung

#Comma-separated list of all ldap-server in the format [domain]#[server-IP]
ldap.list=schmalz.local#ldap://172.16.1.10:389,schmalzgroup.local#ldap://172.16.1.151:389,cn.schmalzgroup.local#ldap://172.16.1.14:389,in.schmalzgroup.local#ldap://10.102.0.2:389,jp.schmalzgroup.local#ldap://172.16.1.135:389


security.disable=true
spring.profiles.active=@spring.profiles.active@
server.servlet.session.timeout=4h
# Used as graylog additional property:
logging.pattern.console=-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %X{mid:-no-message-id-set} : %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}

# Internationalization
spring.messages.basename: i18n/messages
spring.messages.cache-seconds: -1
spring.messages.encoding: UTF-8



spring.data.mongodb.uri=mongodb://localhost:27017/pk


